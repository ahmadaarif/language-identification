# -*- coding: utf-8 -*-
"""Language Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rNmPwZmklzXBSblk-2u3ewotqOebXoP0
"""



!pip install datasets
from datasets import load_dataset, Audio

!pip install transformers
from transformers import pipeline, AutoFeatureExtractor, AutoModelForAudioClassification, TrainingArguments, Trainer

!pip install numpy
import numpy as np

!pip install gradio
import gradio as gr

fleurs = load_dataset("google/fleurs", "all", split="validation", streaming=True)
sample = next(iter(fleurs))

language_model = "sanchit-gandhi/whisper-medium-fleurs-lang-id"
classifier = pipeline("audio-classification", model=language_model)

def classify_lang(filepath):
    # The filepath should be in the numpy nd array format for it to process. make sure you are passing a numpy nd array.
    # The function is built to work with gradio.
    # You can use the function to classify manually as well by passing an audio from the dataset.
    preds = classifier(filepath)
    outputs = {}
    for p in preds:
        outputs[p["label"]] = p["score"]
    return outputs

# Example
classify_lang(sample["audio"]["array"])

with gr.Blocks() as intf:
  name = gr.Textbox(label="File")
  output = gr.Textbox(label="Langauge")
  submit_btn = gr.Button("Submit")
  submit_btn.click(fn=classify_lang, inputs=name, outputs=output, api_name="language_classification")

intf.launch(debug = True)